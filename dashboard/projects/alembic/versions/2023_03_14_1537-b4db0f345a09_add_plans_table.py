"""add_plans_table

Revision ID: b4db0f345a09
Revises: 5a0e2ef319c3
Create Date: 2023-03-14 15:37:13.737293

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b4db0f345a09"
down_revision = "5a0e2ef319c3"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    plans = op.create_table(
        "projects_plans",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("slug", sa.String(length=20), nullable=False),
        sa.Column("requests_per_month", sa.Integer(), nullable=False),
        sa.Column("rate_limit", sa.Integer(), nullable=False),
        sa.Column("rate_period", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("NOW()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("NOW()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("slug"),
    )
    op.add_column("projects", sa.Column("plan_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        "projects_projects_plans", "projects", "projects_plans", ["plan_id"], ["id"]
    )

    op.bulk_insert(
        plans,
        [
            {
                "slug": "basic",
                "requests_per_month": 500_000,
                "rate_limit": 25,
                "rate_period": 1,
            },
            {
                "slug": "liquidathor",
                "requests_per_month": 500_000_000,
                "rate_limit": 100,
                "rate_period": 1,
            },
        ],
    )
    op.execute(
        """UPDATE projects SET plan_id = (SELECT id FROM projects_plans WHERE slug = 'basic');"""
    )

    op.alter_column("projects", "plan_id", nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("projects_projects_plans", "projects", type_="foreignkey")
    op.drop_column("projects", "plan_id")
    op.drop_table("projects_plans")
    # ### end Alembic commands ###
